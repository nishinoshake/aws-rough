@charset "utf-8";

.accordion {
  border-bottom: var(--border-width) solid var(--color-border);
  transition: border-radius 0.24s var(--ease-out-quart);
  &.is-active {
    .accordion-inside {
      opacity: 1;
    }
    .accordion-heading-icon {
      transform: rotate(180deg);
    }
  }
  &:first-child {
    border-top: var(--border-width) solid var(--color-border);
  }
}
.accordion-heading {
  width: 100%;
  display: flex;
  align-items: center;
  position: relative;
  text-align: left;
  line-height: var(--leading-none);
  font-size: var(--text-lg);
  @include transition-fade;
  @include max {
    padding: var(--base-padding);
  }
  @include min {
    min-height: calc(var(--section-heading-height) - var(--border-width));
    padding: 1.2rem var(--base-padding);
    &:before {
      content: "";
      position: absolute;
      z-index: 1000;
      width: calc(100% + var(--border-width));
      height: calc(100% + 2 * var(--border-width));
      top: calc(-1 * var(--border-width));
      left: 0;
      visibility: hidden;
      border: var(--focus-border-width) solid var(--color-link);
    }
    &:hover:before {
      visibility: visible;
    }
  }
}
.accordion-heading-icon {
  position: absolute;
  border: var(--border-width) solid var(--color-border);
  border-radius: 50%;
  transition: transform 0.32s var(--ease-out-quart);
  @include max {
    width: 2.8rem;
    height: 2.8rem;
    top: calc(50% - 1.4rem);
    right: 2.4rem;
  }
  @include min {
    width: 3.2rem;
    height: 3.2rem;
    top: calc(50% - 1.6rem);
    right: var(--base-padding);
  }
  &:after {
    content: "";
    position: absolute;
    bottom: 50%;
    right: 50%;
    border-bottom: var(--border-width) solid currentColor;
    border-right: var(--border-width) solid currentColor;
    transform: translateY(50%) rotate(45deg);
    transform-origin: right bottom;
    @include max {
      width: 0.6rem;
      height: 0.6rem;
    }
    @include min {
      width: 0.6rem;
      height: 0.6rem;
    }
  }
}
.accordion-frame {
  overflow: hidden;
  height: 0;
  will-change: height;
}
.accordion-inside {
  position: relative;
  opacity: 0;
  border-top: var(--border-width) dashed var(--color-border);
  transition: opacity 0.1s linear;
  will-change: opacity;
  @include max {
    padding: calc(var(--base-padding) * 1.4) var(--base-padding);
  }
  @include min {
    padding: var(--base-padding);
  }
  @include min($mq-full) {
    padding-right: calc(100% - var(--max-content-width) + var(--base-padding));
    &:after {
      @include blank;
      border-left-style: dashed;
    }
  }
  .text {
    text-align: justify;
  }
}
